const exports = {}
Object.defineProperty(exports, "__esModule", { value: true });

import {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  NotFoundError,
  decompressFromBase64,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions
} from '.././runtime/edge-esm.js'

const Prisma = {}

exports.Prisma = Prisma

/**
 * Prisma Client JS version: 4.7.1
 * Query Engine version: 272861e07ab64f234d3ffc4094e32bd61775599c
 */
Prisma.prismaVersion = {
  client: "4.7.1",
  engine: "272861e07ab64f234d3ffc4094e32bd61775599c"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.NotFoundError = NotFoundError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = () => (val) => val


/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}


const dirname = '/'

/**
 * Enums
 */
// Based on
// https://github.com/microsoft/TypeScript/issues/3192#issuecomment-261720275
function makeEnum(x) { return x; }

exports.Prisma.QueryMode = makeEnum({
  default: 'default',
  insensitive: 'insensitive'
});

exports.Prisma.SortOrder = makeEnum({
  asc: 'asc',
  desc: 'desc'
});

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = makeEnum({
  id: 'id',
  email: 'email',
  name: 'name',
  password_digest: 'password_digest'
});


exports.Prisma.ModelName = makeEnum({
  User: 'User'
});

const compressedDMMF = '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'
const decompressedDMMF = decompressFromBase64(compressedDMMF)
// We are parsing 2 times, as we want independent objects, because
// DMMFClass introduces circular references in the dmmf object
const dmmf = JSON.parse(decompressedDMMF)
exports.Prisma.dmmf = JSON.parse(decompressedDMMF)

/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/ryotasuzuki/Documents/workspace/study/deno/passkey-example/generated/client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [],
    "previewFeatures": [
      "deno"
    ],
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": "../../.env",
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "../../prisma",
  "clientVersion": "4.7.1",
  "engineVersion": "272861e07ab64f234d3ffc4094e32bd61775599c",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "dataProxy": true
}
config.document = dmmf
config.dirname = dirname

config.inlineSchema = 'Ly8gVGhpcyBpcyB5b3VyIFByaXNtYSBzY2hlbWEgZmlsZSwKLy8gbGVhcm4gbW9yZSBhYm91dCBpdCBpbiB0aGUgZG9jczogaHR0cHM6Ly9wcmlzLmx5L2QvcHJpc21hLXNjaGVtYQoKZ2VuZXJhdG9yIGNsaWVudCB7CiAgcHJvdmlkZXIgPSAicHJpc21hLWNsaWVudC1qcyIKICBwcmV2aWV3RmVhdHVyZXMgPSBbImRlbm8iXQogIG91dHB1dCAgICAgICAgICA9ICIuLi9nZW5lcmF0ZWQvY2xpZW50Igp9CgpkYXRhc291cmNlIGRiIHsKICBwcm92aWRlciA9ICJwb3N0Z3Jlc3FsIgogIHVybCAgICAgID0gZW52KCJEQVRBQkFTRV9VUkwiKQp9Cgptb2RlbCBVc2VyIHsKICBpZCAgICAgIEludCAgICAgIEBkZWZhdWx0KGF1dG9pbmNyZW1lbnQoKSkgQGlkCiAgZW1haWwgICBTdHJpbmcgICBAdW5pcXVlCiAgbmFtZSAgICBTdHJpbmc/CiAgcGFzc3dvcmRfZGlnZXN0IFN0cmluZwp9Cg=='
config.inlineSchemaHash = '0384197b6653d013a3499961205a9e5c08d9f974598d506b8159533f225b5d8b'

config.inlineDatasources = {
  "db": {
    "url": {
      "fromEnvVar": "DATABASE_URL",
      "value": null
    }
  }
}

config.injectableEdgeEnv = {
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
}

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)
export { exports as default, Prisma, PrismaClient }

